digraph {
        compound = "true"
        newrank = "true"
        subgraph "root" {
                "[root] azurerm_kubernetes_cluster.example (expand)" [label = "azurerm_kubernetes_cluster.example", shape = "box"]
                "[root] azurerm_resource_group.example (expand)" [label = "azurerm_resource_group.example", shape = "box"]
                "[root] output.client_certificate" [label = "output.client_certificate", shape = "note"]
                "[root] output.client_key" [label = "output.client_key", shape = "note"]
                "[root] output.cluster_ca_certificate" [label = "output.cluster_ca_certificate", shape = "note"]
                "[root] output.host" [label = "output.host", shape = "note"]
                "[root] output.id" [label = "output.id", shape = "note"]
                "[root] output.kube_config" [label = "output.kube_config", shape = "note"]
                "[root] provider[\"registry.terraform.io/hashicorp/azurerm\"]" [label = "provider[\"registry.terraform.io/hashicorp/azurerm\"]", shape = "diamond"]
                "[root] var.environment" [label = "var.environment", shape = "note"]
                "[root] var.location" [label = "var.location", shape = "note"]
                "[root] var.prefix" [label = "var.prefix", shape = "note"]
                "[root] azurerm_kubernetes_cluster.example (expand)" -> "[root] azurerm_resource_group.example (expand)"
                "[root] azurerm_resource_group.example (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/azurerm\"]"
                "[root] azurerm_resource_group.example (expand)" -> "[root] var.location"
                "[root] azurerm_resource_group.example (expand)" -> "[root] var.prefix"
                "[root] meta.count-boundary (EachMode fixup)" -> "[root] output.client_certificate"
                "[root] meta.count-boundary (EachMode fixup)" -> "[root] output.client_key"
                "[root] meta.count-boundary (EachMode fixup)" -> "[root] output.cluster_ca_certificate"
                "[root] meta.count-boundary (EachMode fixup)" -> "[root] output.host"
                "[root] meta.count-boundary (EachMode fixup)" -> "[root] output.id"
                "[root] meta.count-boundary (EachMode fixup)" -> "[root] output.kube_config"
                "[root] meta.count-boundary (EachMode fixup)" -> "[root] var.environment"
                "[root] output.client_certificate" -> "[root] azurerm_kubernetes_cluster.example (expand)"
                "[root] output.client_key" -> "[root] azurerm_kubernetes_cluster.example (expand)"
                "[root] output.cluster_ca_certificate" -> "[root] azurerm_kubernetes_cluster.example (expand)"
                "[root] output.host" -> "[root] azurerm_kubernetes_cluster.example (expand)"
                "[root] output.id" -> "[root] azurerm_kubernetes_cluster.example (expand)"
                "[root] output.kube_config" -> "[root] azurerm_kubernetes_cluster.example (expand)"
                "[root] provider[\"registry.terraform.io/hashicorp/azurerm\"] (close)" -> "[root] azurerm_kubernetes_cluster.example (expand)"  
                "[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
                "[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/azurerm\"] (close)"
        }
}